# To ignore a file, add following line to top of the go file:
# // Code generated by some tool. DO NOT EDIT.
ignoreGeneratedHeader = false

severity = "warning"
confidence = 0.8
errorCode = 2
warningCode = 1

[rule.blank-imports]
[rule.context-as-argument]
[rule.context-keys-type]
[rule.dot-imports]
[rule.error-return]
[rule.error-strings]
[rule.error-naming]
[rule.exported]
[rule.if-return]
[rule.increment-decrement]
[rule.var-naming]
   arguments = [["VM", "IP", "URI", "URL", "API", "HTTP", "RPC", "JSON", "CPU", "NTP", "RAM",
   "SSH", "DNS", "UI", "SQL", "TCP", "XML"], []]
[rule.var-declaration]
[rule.range]
[rule.receiver-naming]
[rule.time-naming]
[rule.unexported-return]
[rule.indent-error-flow]
[rule.errorf]
[rule.bare-return]
[rule.comment-spacings]
[rule.use-any]

# revive disable syntax
#
# Disable entire file or only range of lines:
# //revive:disable
# func Public() {}
# //revive:enable
#
# Disable on a rule level:
# //revive:disable:unexported-return
# func Public() private {
#   return private
# }
# //revive:enable:unexported-return
#
# Document the disable reason:
# //revive:disable Until the code is stable
# //revive:disable:cyclomatic High complexity score but easy to understand